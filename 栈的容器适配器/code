#include <deque>
#include <iostream>
#include <list>
using namespace std;
//记得第二参数也要定类型 ：deque<T>
template <class T, class container = deque<T>>
class stack
{
public:
    void push(const T &x)
    {
        // push就是尾插
        _con.push_back(x);
    }
    void pop()
    {
        // 栈是先进后出的，所以pop的是队尾的数据
        _con.pop_back();
    }
    T &top()
    {
        // deque可以获得首和尾的数据，front和back
        return _con.back();
    }
    size_t size()
    {
        return _con.size();
    }
    bool empty()
    {
        return _con.empty();
    }

private:
    container _con;
};

int main()
{
    stack<int, list<int>> s1;
    s1.push(1);
    s1.push(2);
    s1.push(3);
    while (!s1.empty())
    {
        cout << s1.top() << " ";
        s1.pop();
    }
    cout << endl;

    return 0;
}
